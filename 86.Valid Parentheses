bool isValidParenthesis(string expression)
{
    stack<char> st;
    for (char c : expression) {
      if ( c == '[')
      {
          st.push(']');
      }
      else if(c == '(')
      {
          st.push(')');

      } 
      else if (c == '{') 
      {
        st.push('}');
      } 
      else 
      {
        if (st.empty() || st.top() != c)
          return false;
        st.pop();
      }
    }
      return st.empty();
}
